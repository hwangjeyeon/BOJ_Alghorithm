// 순열 학습 및 구현
// 참고: https://bcp0109.tistory.com/14

// swap을 이용한 순열
 static void permutation(int[] arr, int depth, int n, int r){
        if(depth == r){
            for (int i = 0; i < r; i++) {
                System.out.print(arr[i] + " ");
            }
            System.out.println();
        }
        for (int i = depth; i < n; i++) {
            swap(arr, depth, i);
            permutation(arr, depth+1, n, r);
            swap(arr, depth, i);

        }



    }
    static void swap(int[] arr, int depth, int i){
        int tmp = arr[depth];
        arr[depth] = arr[i];
        arr[i] = tmp;
    }

//visited 배열을 이용한 순열
static void permutation2(int[] arr, int[] output, boolean[] visited, int depth, int n, int r) {
    if(depth == r){
        for (int i = 0; i < r; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        return;
    }

    for (int i = 0; i < n; i++) {
        if(!visited[i]){
            visited[i] = true;
            output[depth] = arr[i];
            permutation2(arr, output, visited, depth+1, n, r);
            visited[i] = false;
        }
    }


}

